pip install matplotlib

import streamlit as st
import pandas as pd
import subprocess
import json
import matplotlib.pyplot as plt
import seaborn as sns

# Title of the App
st.title("Python Application Vulnerability Scanner")

# Instruction text
st.write("Upload your Python file to scan for vulnerabilities.")

# File uploader for Python code
uploaded_file = st.file_uploader("Choose a Python file", type=["py"])

if uploaded_file:
    # Save the uploaded file
    with open("uploaded_file.py", "wb") as f:
        f.write(uploaded_file.getbuffer())

    # Run Bandit on the uploaded file and get the report as JSON
    try:
        result = subprocess.run(
            ["bandit", "-r", "uploaded_file.py", "-f", "json"], capture_output=True, text=True
        )
        bandit_output = json.loads(result.stdout)

        # If bandit found issues
        if bandit_output["results"]:
            # Extract relevant data for analysis
            data = {
                "Filename": [item["filename"] for item in bandit_output["results"]],
                "Issue": [item["issue_text"] for item in bandit_output["results"]],
                "Severity": [item["issue_severity"] for item in bandit_output["results"]],
                "Confidence": [item["issue_confidence"] for item in bandit_output["results"]],
                "Risk Score": [item["issue_severity"] == "HIGH" and 10 or 5 for item in bandit_output["results"]],
            }
            
            df = pd.DataFrame(data)

            # Display the table of issues
            st.header("Vulnerability Report")
            st.dataframe(df)

            # Plot a bar chart of the risk scores
            st.header("Vulnerability Risk Score Chart")
            plt.figure(figsize=(10, 6))
            sns.barplot(x="Filename", y="Risk Score", hue="Severity", data=df, palette="coolwarm")
            plt.title("Risk Scores by Vulnerabilities Detected")
            plt.xticks(rotation=90)
            st.pyplot(plt)

        else:
            st.write("No vulnerabilities found!")
    except Exception as e:
        st.error(f"Error running Bandit: {str(e)}")

st.write("This app scans a Python file for security vulnerabilities using Bandit.")
